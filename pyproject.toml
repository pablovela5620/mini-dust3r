[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mini-dust3r"
version = "0.1.4"
description = "Miniature version of dust3r, focused on inference"
requires-python = ">=3.10.0"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]
readme = "README.md"


dependencies = [
    "opencv-python>=4.10.0",
    "rerun-sdk>=0.17.0",
    "tqdm>=4.67.1",
    "trimesh>=4.4.4",
    "jaxtyping>=0.2.33",
    "beartype>=0.18.5",
    "einops>=0.8.0",
    "gradio<5",
    "scipy>=1.14.0",
    "safetensors>=0.4.3",
    "hf-transfer>=0.1.6",
    "numpy<2",
    # # not in conda dependencies
    "roma>=1.5",
    "pillow-heif==0.20.0",

]
[tool.setuptools.packages.find]
include = ["mini_dust3r*"]

[tool.pixi.project]
name = "mini-dust3r"
authors = ["pablovela5620 <pablovela5620@gmail.com>"]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.31" }

[tool.pixi.activation]
scripts = [".pixi.sh"]

[tool.pixi.tasks]
_dev-install = "python -m pip install build twine"
_build-wheel = "python -m build"
upload-hf = { cmd = "python tools/upload_to_hf.py", depends-on = [
    "_build-wheel",
] }


[tool.pixi.tasks.build-wheel]
cmd = "python -m build"
depends-on = ["_dev-install"]
description = "Build python wheels"

[tool.pixi.tasks.rerun-demo]
cmd = "PYTORCH_ENABLE_MPS_FALLBACK=1 python tools/rerun_demo.py"
description = "runs demo using rerun visualizer"

[tool.pixi.tasks.app]
cmd = "python tools/gradio_app.py"
description = "run gradio frontend for mini-dust3r"

[tool.pixi.tasks.dev-app]
cmd = """
    gradio tools/gradio_app.py
    """
description = "Runs Gradio frontend with hot-reload"

[tool.pixi.feature.spaces.tasks.app]
cmd = """
    python gradio_app.py
    """
description = "Runs Gradio frontend in huggingface spaces"

[tool.pixi.dependencies]
python = "3.11.*"
py-opencv = ">=4.10.0,<5"
tqdm = ">=4.67.1,<5"
trimesh = ">=4.4.4,<5"
jaxtyping = ">=0.2.33,<0.3"
beartype = ">=0.18.5,<0.21"
einops = ">=0.8.0,<0.9"
gradio = "<5"
scipy = ">=1.14.0,<2"
pip = ">=24.2,<25"
rerun-sdk = ">=0.22.1,<0.23"
safetensors = ">=0.5.3,<0.6"
hf-transfer = ">=0.1.9,<0.2"
numpy = "<2"
open3d = ">=0.19.0,<0.20"

[tool.pixi.pypi-dependencies]
mini-dust3r = { path = ".", editable = true }
# mini-dust3r = { path = "dist/mini_dust3r-0.1.3-py3-none-any.whl" }
gradio-rerun = { url = "https://huggingface.co/datasets/pablovela5620/gradio-rr-wheels/resolve/main/gradio_rerun-0.0.11-py3-none-any.whl" }
simplecv = { git = "https://github.com/pablovela5620/simplecv.git" }
torch = { version = "==2.4.1", index = "https://download.pytorch.org/whl/cu124" }
torchvision = { version = "==0.19.1", index = "https://download.pytorch.org/whl/cu124" }


[tool.pixi.target.osx-arm64.pypi-dependencies]
pillow-heif = { url = "https://files.pythonhosted.org/packages/1e/c7/6142e53ffd416e091c0a85b75b5eab87ff5a09e5f7b5d1075cd8559dafde/pillow_heif-0.20.0-cp311-cp311-macosx_14_0_arm64.whl" }
torch = { version = ">=2.5.1", index = "https://download.pytorch.org/whl/cpu" }
torchvision = { version = ">=0.20.1", index = "https://download.pytorch.org/whl/cpu" }

[tool.pixi.feature.spaces.pypi-dependencies]
spaces = "*"

[tool.pixi.environments]
spaces = { features = ["spaces"], solve-group = "default" }

[tool.ruff]
line-length = 150
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

ignore = [
    "E501", # Line too long.
    "F722", # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "F821", # Forward annotation false positive from jaxtyping. Should be caught by pyright.
]
